<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
	elementFormDefault="qualified" attributeFormDefault="unqualified">
	<xs:element name="unmarshall">
		<xs:annotation>
			<xs:documentation>Root of mapping XML to Object</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:choice maxOccurs="unbounded">
				<xs:element ref="value" />
				<xs:element ref="object" />
				<xs:element ref="reference" />
			</xs:choice>
			<xs:attribute name="class" type="xs:string" use="required" />
			<xs:attribute name="node" type="xs:string" use="required" />
		</xs:complexType>
	</xs:element>
	<xs:element name="value">
		<xs:annotation>
			<xs:documentation>Maps a value onto the current context&apos;s object</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:attribute name="node" type="xs:string" use="required"/>
			<xs:attribute name="method" type="xs:string" use="required"/>
			<xs:attribute name="format" type="xs:string" use="optional"/>
		</xs:complexType>
	</xs:element>
	<xs:element name="object">
		<xs:annotation>
			<xs:documentation>Maps an object onto the current context's object and then pushes a new context for this object</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element ref="value"/>
				<xs:element ref="object"/>
				<xs:element ref="reference"/>
			</xs:choice>
			<xs:attribute name="node" type="xs:string" use="required"/>
			<xs:attribute name="method" type="xs:string" use="required"/>
			<xs:attribute name="class" type="xs:string" use="required"/>
			<xs:attribute name="id" type="xs:string" use="optional"/>
		</xs:complexType>
	</xs:element>
	<xs:element name="reference">
		<xs:annotation>
			<xs:documentation>Enables referencing another mapping.  Mainly useful for recursive mappings.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:attribute name="method" type="xs:string" use="required"/>
			<xs:attribute name="id" type="xs:string" use="required"/>
		</xs:complexType>
	</xs:element>
</xs:schema>
