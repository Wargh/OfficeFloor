                                               -----------------------
                                                   Deploy Tutorial 
                                               -----------------------
					                             Daniel Sagenschneider
                                               -----------------------

  <<Deploy Tutorial>>

  This tutorial demonstrates the ease of deploying OfficeFloor applications.

  {{{http://sourceforge.net/projects/officefloor/files/maven/maven2/net/officefloor/tutorial/DeployHttpServer/${projectVersion}/DeployHttpServer-${projectVersion}-project.zip/download}Download Tutorial Source}}
  
  To deploy an OfficeFloor application, add the following build configuration to your <pom.xml>:
  
%{snippet|id=tutorial|file=${basedir}/pom.xml|ignoreDownloadError=false}

  This will create an executable jar that can be run with the following:
  
---------------
    java -jar <project-jar-file>
---------------

  In the case of this tutorial, it is:
                                                                                                                          
---------------
    java -jar DeployHttpServer-${project.version}.jar
---------------

Docker

  As OfficeFloor applications can be run as a single command, it is easy to copy the jar file into a Docker image and run it.
  
  A simple Docker build file might look as follows:
  
---------------

FROM openjdk:8
COPY target/DeployHttpServer-${project.version}.jar server.jar
CMD ["java", "-Dhttp.port=8080", "-jar", "server.jar"]
  
---------------

  Various system properties can be used to configure OfficeFloor.  Please see:
  
   * {{{/apidocs/net/officefloor/server/http/HttpServerLocation.html}HttpServerLocation}}
   
   * {{{/apidocs/net/officefloor/server/http/HttpServer.html}HttpServer}}


Next

  The {{{../HttpServletHttpServer/index.html}next tutorial}} looks at deploying to Servlet container (useful for PaaS cloud providers).
