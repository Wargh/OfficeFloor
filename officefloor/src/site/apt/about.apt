~~~
~~ #%L
~~ OfficeFloor
~~ %%
~~ Copyright (C) 2005 - 2020 Daniel Sagenschneider
~~ %%
~~ This program is free software: you can redistribute it and/or modify
~~ it under the terms of the GNU Affero General Public License as published by
~~ the Free Software Foundation, either version 3 of the License, or
~~ (at your option) any later version.
~~ 
~~ This program is distributed in the hope that it will be useful,
~~ but WITHOUT ANY WARRANTY; without even the implied warranty of
~~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
~~ GNU General Public License for more details.
~~ 
~~ You should have received a copy of the GNU Affero General Public License
~~ along with this program.  If not, see <http://www.gnu.org/licenses/>.
~~ #L%
~~~

				       ------------------
				        About OfficeFloor
				       ------------------
				      Daniel Sagenschneider
				       ------------------

  REDIRECT FOR DOWNLOAD
  
OfficeFloor
  
  OfficeFloor is named after the origin of the concepts that it is built upon.
  
  Most frameworks <invent> patterns to solve technical problems.  They then force them on modeling the <real world>.

  OfficeFloor focuses on taking <real world> problems and modeling them technically.  Rather than <invent> patterns, the OfficeFloor team looked up from their desk and watched how people in an office solve communication, scale and various other problems.  For example, teams focus on functional areas and there is not <one> team that does everything.

  These concepts have been published in the following paper:

  {{{http://doi.acm.org/10.1145/2739011.2739013}http://doi.acm.org/10.1145/2739011.2739013}}

  and has given rise to a more complete "inversion of control" (or more appropriately <<<Inversion of Coupling Control>>>):
  
---
        Inversion of Coupling Control = Dependency Injection + Continuation Injection + Thread Injection
---

  A summary of the paper is available {{{https://sagenschneider.blogspot.com/2019/02/inversion-of-coupling-control.html}here}}.
  
  To see how these concepts have made software development easier, please try out the {{{./tutorials/index.html}tutorials}}.
  
  Note that the above might also be found in its shortened version:

---
        IoC = DI + CI + TI
---
