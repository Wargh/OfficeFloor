trigger:
- master

strategy:
  matrix:
    java_8:
      imageName: 'ubuntu-latest'
      javaVersion: '1.8'
      javaHomeOption: 'Path'
      javaHomePath: '/usr/lib/jvm/java-8-openjdk-amd64'
      isDockerAvailable: false
      isPublishResults: false
    linux:
      imageName: 'ubuntu-latest'
      javaVersion: '1.11'
      javaHomeOption: 'JDKVersion'
      javaHomePath: ''
      isDockerAvailable: true
      isPublishResults: true
#    mac:
#      imageName: 'macos-latest'
#    windows:
#      imageName: 'windows-latest'

pool:
  vmImage: $(imageName)

variables:
  JDK_VERSION: $(javaVersion)
  OFFICEFLOOR_CODE_COVERAGE: $(isPublishResults)
  OFFICEFLOOR_DOCKER_AVAILABLE: $(isDockerAvailable)

steps:
- script: |
    sudo apt-get update
    sudo apt-get install -y fakeroot alien
    sudo apt-get install -y openjdk-8-jdk openjfx
    # echo "##vso[task.setvariable variable=jdkDir]/usr/lib/jvm/java-8-openjdk-amd64"
    echo "##vso[task.prependpath]$(javaHome)/bin" # Override existing java
  displayName: 'Install OpenJDK 8 with OpenJFX'
  condition: eq(variables.JDK_VERSION, '1.8')
- task: Maven@3
  displayName: CI
  inputs:
    mavenPomFile: 'officefloor/bom/pom.xml'
    goals: 'install'
    options: '-DskipStress'
    mavenOptions: '-Xmx3072m'
    javaHomeOption: $(javaHomeOption)
    jdkVersionOption: $(javaVersion)
    jdkDirectory: $(javaHomePath)
    publishJUnitResults: $(isPublishResults)
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
- script: |
    bash <(curl -s https://codecov.io/bash)
  displayName: 'Upload Code Coverage'
  condition: eq(variables.OFFICEFLOOR_CODE_COVERAGE, true)
- task: Maven@3
  displayName: 'Eclipse 2018-12'
  inputs:
    mavenPomFile: 'officefloor/editor/pom.xml'
    goals: 'clean install'
    options: '-P 2018-12.target'
    javaHomeOption: $(javaHomeOption)
    jdkVersionOption: $(javaVersion)
    jdkDirectory: $(javaHomePath)
    publishJUnitResults: false
- task: Maven@3
  displayName: 'Eclipse PHOTON'
  inputs:
    mavenPomFile: 'officefloor/editor/pom.xml'
    goals: 'clean install'
    options: '-P PHOTON.target'
    javaHomeOption: $(javaHomeOption)
    jdkVersionOption: $(javaVersion)
    jdkDirectory: $(javaHomePath)
    publishJUnitResults: false
- task: Maven@3
  displayName: 'Eclipse OXYGEN'
  inputs:
    mavenPomFile: 'officefloor/editor/pom.xml'
    goals: 'clean install'
    options: '-P OXYGEN.target'
    javaHomeOption: $(javaHomeOption)
    jdkVersionOption: $(javaVersion)
    jdkDirectory: $(javaHomePath)
    publishJUnitResults: false
